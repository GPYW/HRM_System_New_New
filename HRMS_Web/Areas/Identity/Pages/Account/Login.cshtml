@page
@model LoginModel

@{
    ViewData["Title"] = "Log in";
}

<!-- Login Form  -->

<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
<link rel="stylesheet" href="~/AdminLTE/plugins/fontawesome-free/css/all.min.css">
<link rel="stylesheet" href="~/AdminLTE/plugins/icheck-bootstrap/icheck-bootstrap.min.css">
<link rel="stylesheet" href="~/AdminLTE/dist/css/adminlte.min.css?v=3.2.0">
<link href="https://fonts.googleapis.com/css?family=Poppins:400,500,600,700%7CAllura" rel="stylesheet">
<link href="~/AdminLTE/hometemp/common-css/bootstrap.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.2/font/bootstrap-icons.min.css">
<link href="~/AdminLTE/hometemp/common-css/ionicons.css" rel="stylesheet">
<link rel="stylesheet" type="text/css" href="~/AdminLTE/hometemp/revolution/css/settings.css">
<link href="~/AdminLTE/hometemp/01_Photography/css/styles.css" rel="stylesheet">
<link href="~/AdminLTE/hometemp/01_Photography/css/responsive.css" rel="stylesheet">

<script nonce="d1aa953a-e0e0-45d3-88e8-643307e7b832">try { (function (w, d) { !function (j, k, l, m) { j[l] = j[l] || {}; j[l].executed = []; j.zaraz = { deferred: [], listeners: [] }; j.zaraz.v = "5592"; j.zaraz.q = []; j.zaraz.f = function (n) { return async function () { var o = Array.prototype.slice.call(arguments); j.zaraz.q.push({ m: n, a: o }) } }; for (const p of ["track", "set", "debug"]) j.zaraz[p] = j.zaraz.f(p); j.zaraz.init = () => { var q = k.getElementsByTagName(m)[0], r = k.createElement(m), s = k.getElementsByTagName("title")[0]; s && (j[l].t = k.getElementsByTagName("title")[0].text); j[l].x = Math.random(); j[l].w = j.screen.width; j[l].h = j.screen.height; j[l].j = j.innerHeight; j[l].e = j.innerWidth; j[l].l = j.location.href; j[l].r = k.referrer; j[l].k = j.screen.colorDepth; j[l].n = k.characterSet; j[l].o = (new Date).getTimezoneOffset(); if (j.dataLayer) for (const w of Object.entries(Object.entries(dataLayer).reduce(((x, y) => ({ ...x[1], ...y[1] })), {}))) zaraz.set(w[0], w[1], { scope: "page" }); j[l].q = []; for (; j.zaraz.q.length;) { const z = j.zaraz.q.shift(); j[l].q.push(z) } r.defer = !0; for (const A of [localStorage, sessionStorage]) Object.keys(A || {}).filter((C => C.startsWith("_zaraz"))).forEach((B => { try { j[l]["z" + B.slice(7)] = JSON.parse(A.getItem(B)) } catch { j[l]["z" + B.slice(7)] = A.getItem(B) } })); r.referrerPolicy = "origin"; r.src = "/cdn-cgi/zaraz/s.js?z=" + btoa(encodeURIComponent(JSON.stringify(j[l]))); q.parentNode.insertBefore(r, q) };["complete", "interactive"].includes(k.readyState) ? zaraz.init() : j.addEventListener("DOMContentLoaded", zaraz.init) }(w, d, "zarazData", "script"); })(window, document) } catch (e) { throw fetch("/cdn-cgi/zaraz/t"), e; };</script>

<script src="~/AdminLTE/plugins/jquery/jquery.min.js"></script>
<script src="~/AdminLTE/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="~/AdminLTE/dist/js/adminlte.min.js?v=3.2.0"></script>
<script type="text/javascript" src="~/AdminLTE/hometemp/revolution/js/jquery.themepunch.tools.min.js"></script>
<script type="text/javascript" src="~/AdminLTE/hometemp/revolution/js/jquery.themepunch.revolution.min.js"></script>
<style>
    .gradient-btn {
        color: white;
        border: 0.5px solid white;
        background: transparent;
        transition: background 0.3s, color 0.3s, border-color 0.3s;
        border-radius: 100px;
    }

        .gradient-btn:hover {
            background-color: #17a2b8;
            border-color: white;
            color: white;
        }

    .custom-input {
        background-color: rgba(20, 20, 20, 0); /* Transparent background */
        border: 1px solid #fff !important; /* White border */
        border-radius: 0px 4px 4px 0px; /* Rounded corners on the right side */
        color: white; /* Ensure the text is visible */
        transition: background-color 0.3s, border-color 0.3s;
    }

        .custom-input:focus {
            background-color: rgba(20, 20, 20, 0.1); /* Slightly darker background on focus */
            border-color: #17a2b8; /* Bootstrap info color on focus */
            outline: none; /* Remove default outline */
        }

    .custom-checkbox-container {
        display: flex;
        align-items: center;
    }

    .custom-checkbox {
        width: 16px; /* Adjust the size as needed */
        height: 16px; /* Adjust the size as needed */
        margin-right: 8px; /* Space between the checkbox and the label */
    }

        .custom-checkbox:checked {
            background-color: #17a2b8; /* Bootstrap info color when checked */
        }



</style>
<div>
    <img src="~/images/login3.png" style="position:absolute;"/>
</div>

<div class="row" >
    <div class="col-sm-6 d-flex align-items-center justify-content-center" style="height: 100vh;">
        <div class="row d-flex flex-column align-items-center">
        </div>
    </div>

    <div class="col-sm-6 d-flex align-items-center justify-content-center"  >
        <div class="login-box">
            <div class="card-header text-center" style="background-color:rgba(255, 255, 255, 0);">
                <h1 style="color:#17a2b8; font-weight:100;">Welcome</h1>
                <h1 style="color:#fff; font-weight:100;">Back :)</h1>

            </div>
            <div class="card-body" style="background-color: rgba(255, 255, 255, 0);">
                <form id="account" method="post">
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                        </div>
                        <input type="email" asp-for="Input.Email" class="form-control border-0 custom-input" autocomplete="username" aria-required="true" placeholder="Email" />
                    </div>
                    <div class="text-danger">
                        @Html.ValidationMessageFor(m => m.Input.Email)
                    </div>

                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fas fa-lock"></i></span>
                        </div>
                        <input type="password" asp-for="Input.Password" class="form-control border-0 custom-input" autocomplete="current-password" aria-required="true" placeholder="Password" />
                    </div>
                    <div class="text-danger">
                        @Html.ValidationMessageFor(m => m.Input.Password)
                    </div>

                    <div class="row">
                        <div class="col-6">
                            <div class="icheck-polaris">
                                <div class="custom-checkbox-container">
                                    <input type="checkbox" id="remember" asp-for="Input.RememberMe" class="custom-checkbox" />
                                </div>                                
                                <label style="font-weight:100;color:#fff; font-size:12px; margin-top:-13%" for="remember">
                                    Remember Me
                                </label>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="text-center" style="font-size:12px;">
                                <a id="forgot-password" asp-page="./ForgotPassword" style="margin-top:10px; color:#fff">Forgot password</a>
                            </div>
                        </div>
                    </div><br />
                            
                    <div class="row">
                        <div class="col-4">
                        </div>
                        <div class="col-4 d-flex align-items-end justify-content-end">
                            <button id="login-submit" type="submit" class="btn btn-block gradient-btn">Login</button><br />
                        </div>

                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
